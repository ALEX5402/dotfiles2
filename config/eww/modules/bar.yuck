(defwindow bar
    :monitor 0
    :stacking "fg"
    :exclusive true
    :namespace e_namespace

    :geometry (geometry :anchor "top center"
        :width "100%"
        :height "40px")
(w_bar))

(defwidget w_bar []
(centerbox :class "w_bar"
    (box :class "start" :halign "start" :spacing "10" :space-evenly false
        (launcher)
        (workspaces)
        (sysinfo)
        ;; (tray) ;; waiting on https://github.com/elkowar/eww/pull/743
        )
    (box :class "middle" :halign "center" :spacing "10" :space-evenly false
        (player)
        )
    (box :class "end" :halign "end" :spacing "10" :space-evenly false
        (media)
        (battery)
        (network)
        (clock)
        (power)
        )
    )
)

;; BAR MODULES
(defwidget launcher[] (eventbox :class "launcher"
    :onclick cmd_launcher :timeout "10s"
(box :width 38)
))

;; http://wiki.hyprland.org/Useful-Utilities/Status-Bars/#eww
(defwidget workspaces [] (eventbox :class "workspaces"
(box :space-evenly true :spacing 20
    (for workspace in "[1, 2, 3, 4]"
        (eventbox :class "${workspace == workspaces.active ? "active" : "inactive"}" :width 24
                :onclick "hyprctl dispatch workspace ${workspace}"
            (label :text
                    "${workspace == 1 ? "" :
                    "${workspace == 2 ? "" :
                    "${workspace == 3 ? "" :
                    "${workspace == 4 ? "" :
                    ""}"}"}"}"
                )
            )
        )
    )
))


(defwidget sysinfo[] (eventbox :class "sysinfo"
(box :spacing 12 :space-evenly false
    (label :text " ${round((EWW_RAM.used_mem) / (1024 * 1024 * 1024), 1)}G")
    (label :text " ${round(EWW_CPU.avg, 1)}%"))
))

;; (defwidget tray[] (eventbox :class "tray"
;; (box 
;;     )
;; ))

(defwidget player[] (eventbox :class "player" :visible {"${player != "[]"}"}
    :onclick cmd_player_next
    :onrightclick cmd_player_previous
    :onmiddleclick cmd_player_toggle
(box :spacing 20 :space-evenly false
    (label :text "${player[0].glyph}")
    (label :limit-width 35 :text
            "${player[0].artist == "" ? "${player[0].title}" :
            "${player[0].artist} - ${player[0].title}"}")
    )
))

(defwidget media[] (eventbox :class "media ${audio.sink[0].bus} ${audio.sink[0].mute ? "muted" : "unmuted"}"
(box :spacing 14 :space-evenly false
    (eventbox :onclick cmd_sink_mute :onscroll "[ {} == 'up' ] && (${cmd_sink_volume_increase}) || (${cmd_sink_volume_decrease})"
        (box :class "sink" :spacing 10 :space-evenly false
            (label :text
                "${audio.sink[0].mute || audio.sink[0].volume == 0 ? " " :
                "${audio.sink[0].port == "Headphones"              ? " " :
                "${audio.sink[0].volume >= 50                      ? " " :
                ""}"}"}")
            (label :text "${audio.sink[0].volume}%" :visible "${!(audio.sink[0].mute)}")))
    (eventbox :onclick cmd_source_mute :onscroll "[ {} == 'up' ] && (${cmd_source_volume_increase}) || (${cmd_source_volume_decrease})"
        (box :class "source" :spacing 10 :space-evenly false
            (label :text "${audio.source[0].mute || audio.source[0].volume == 0 ? " " : ""}")
            (label :text "${audio.source[0].volume}%" :visible "${!audio.source[0].mute}")))
    )
))

(defwidget battery[] (eventbox :class "battery"
    :onscroll "[ {} == 'up' ] && (${cmd_brightness_increase}) || (${cmd_brightness_decrease})"
(box :spacing 10 :space-evenly false
    (label :text
        "${EWW_BATTERY.BAT0.capacity >= 80 ? " " :
        "${EWW_BATTERY.BAT0.capacity >= 60 ? " " :
        "${EWW_BATTERY.BAT0.capacity >= 40 ? " " :
        "${EWW_BATTERY.BAT0.capacity >= 20 ? " " :
        " "}"}"}"}")
    (label :text "${EWW_BATTERY.BAT0.capacity}%"))
))

(defwidget network[] (eventbox :class "network ${network.connectivity}"
(box :spacing 10 :space-evenly false
    (label :text
        "${network.connectivity == "full" ?
            "${network.type == "wifi" ?
                "${network.strength > 80 ? "󰤥 " :
                "${network.strength > 40 ? "󰤢 " :
                "${network.strength > 20 ? "󰤟 " :
                "󰤯 "}"}"}" :
            ""}" :
        "${network.connectivity == "limited" ?
            "${network.type == "wifi" ?
                "${network.strength > 80 ? "󰤦 " :
                "${network.strength > 40 ? "󰤣 " :
                "${network.strength > 20 ? "󰤠 " :
                "󰤫 "}"}"}" :
            ""}" :
        "󰤭 "}"}")
    (label :text "${network.ssid}"))
))

(defwidget clock[] (eventbox :class "clock"
(box 
    (label :text time))
))

(defwidget power[] (eventbox :class "power"
    :onclick cmd_toggle_powermenu
(box 
    (label :text ""))
))
