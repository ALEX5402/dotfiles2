(defwindow bar
    :monitor 0
    :stacking "fg"
    :exclusive true
    :namespace "eww_exclusive"

    :geometry (geometry :anchor "top center"
        :width "100%"
        :height "40px")
(w_bar))

(defwidget w_bar[]
(centerbox :class "w_bar"
    (box :class "start" :halign "start" :spacing "10" :space-evenly false
        (launcher)
        (workspaces)
        (sysinfo)
        ;; (tray) ;; waiting on https://github.com/elkowar/eww/pull/743
        )
    (box :class "middle" :halign "center" :spacing "10" :space-evenly false
        (player)
        )
    (box :class "end" :halign "end" :spacing "10" :space-evenly false
        (media)
        (battery)
        (network)
        (clock)
        (power)
        )
))

;; REVEAL BOOLEAN
(defvar r_bar_launcher false)
(defvar r_bar_exit false)
(defvar r_bar_date false)
(defvar r_bar_ssid false)

;; BAR MODULES
(defwidget launcher[] (eventbox :class "launcher"
    :onclick cmd_launcher
    :timeout "10s"
    :onhover "eww update r_bar_launcher=true"
    :onhoverlost "eww update r_bar_launcher=false"
    (box :class "wrapper"
(box :space-evenly false
    (box :class "image" :width 16)
    (revealer :reveal r_bar_launcher
        :transition "slideleft"
        (label :text "Launcher" :style "padding-left: 10px")))
)))

;; http://wiki.hyprland.org/Useful-Utilities/Status-Bars/#eww
(defwidget workspaces[] (eventbox :class "workspaces" (box :class "wrapper"
(box :spacing 20 :space-evenly true
    (for workspace in "[1, 2, 3, 4]"
        (eventbox :class "${workspace == workspaces?.active ? "active" : "inactive"}" :width 24
                :onclick "hyprctl dispatch workspace ${workspace}"
            (label :text
                    "${workspace == 1 ? "" :
                    "${workspace == 2 ? "" :
                    "${workspace == 3 ? "" :
                    "${workspace == 4 ? "" :
                    ""}"}"}"}"))))
)))


(defwidget sysinfo[] (eventbox :class "sysinfo" (box :class "wrapper"
(box :spacing 12 :space-evenly false
    (label :text " ${round((EWW_RAM.used_mem) / (1024 * 1024 * 1024), 1)}G")
    (label :text " ${round(EWW_CPU.avg, 1)}%"))
)))

;; (defwidget tray[] (eventbox :class "tray"
;; (box
;;     )
;; ))

(defwidget player[] (eventbox :class "player"
    :visible {"${player != "null" && player.active != []}"}
    :onclick "eww open --toggle player"
    :onrightclick cmd_player_next
    :onmiddleclick cmd_player_toggle
    (box :class "wrapper"
(box :spacing 20 :space-evenly false
    (label :text "${player?.alive?.[0]?.glyph}")
    (label :limit-width 35 :text "${player?.alive?.[0]?.artist == "" ? "${player?.alive?.[0]?.title}" : "${player?.alive?.[0]?.artist} - ${player?.alive?.[0]?.title}"}"))
)))

(defwidget media[] (eventbox :class "media ${audio != "null" ? audio.sink[0].bus : "disconnected"} ${audio == "null" || audio.sink[0].mute ? "muted" : "unmuted"}" (box :class "wrapper"
(box :spacing 10 :space-evenly false
    (eventbox :onclick cmd_sink_mute :onscroll "[ {} == 'up' ] && (${cmd_sink_volume_increase}) || (${cmd_sink_volume_decrease})"
        (box :class "sink" :spacing 10 :space-evenly false
            (label :text "${audio == "null" || audio.sink[0].mute || audio.sink[0].volume == 0 ? " " :
                    "${audio.sink[0].port == "Headphones" ? " " :
                    "${audio.sink[0].volume >= 50         ? " " :
                    ""}"}"}")
            (label :text "${audio?.sink?.[0]?.volume}%" :visible "${audio == "null" || !(audio?.sink[0].mute)}")))
    (eventbox :onclick cmd_source_mute :onscroll "[ {} == 'up' ] && (${cmd_source_volume_increase}) || (${cmd_source_volume_decrease})"
        (box :class "source" :spacing 10 :space-evenly false
            (label :text "${audio == "null" || audio.source[0].mute || audio.source[0].volume == 0 ? " " : ""}")
            (label :text "${audio?.source?.[0]?.volume}%" :visible "${audio == "null" || !(audio?.source[0].mute)}"))))
)))

(defwidget battery[] (eventbox :class "battery"
    :onscroll "[ {} == 'up' ] && (${cmd_brightness_increase}) || (${cmd_brightness_decrease})"
    (box :class "wrapper"
(box :spacing 10 :space-evenly false
    (label :text
        "${EWW_BATTERY.BAT0.capacity >= 80 ? " " :
        "${EWW_BATTERY.BAT0.capacity >= 60 ? " " :
        "${EWW_BATTERY.BAT0.capacity >= 40 ? " " :
        "${EWW_BATTERY.BAT0.capacity >= 20 ? " " :
        " "}"}"}"}")
    (label :text "${EWW_BATTERY.BAT0.capacity}%"))
)))

(defwidget network[] (eventbox :class "network ${network?.connectivity}"
    :onhover "eww update r_bar_ssid=true"
    :onhoverlost "eww update r_bar_ssid=false"
    (box :class "wrapper"
(box :space-evenly false
    (label :text
        "${network?.connectivity == "full" ?
            "${network?.type == "wifi" ?
                "${network?.strength > 80 ? "󰤥 " :
                "${network?.strength > 40 ? "󰤢 " :
                "${network?.strength > 20 ? "󰤟 " :
                "󰤯 "}"}"}" :
            ""}" :
        "${network?.connectivity == "limited" ?
            "${network?.type == "wifi" ?
                "${network?.strength > 80 ? "󰤦 " :
                "${network?.strength > 40 ? "󰤣 " :
                "${network?.strength > 20 ? "󰤠 " :
                "󰤫 "}"}"}" :
            ""}" :
        "󰤭 "}"}")
    (revealer :reveal r_bar_ssid
        :transition "slideleft"
        (label :text "${network?.ssid}" :style "padding-left: 10px")))
)))

(defwidget clock[] (eventbox :class "clock"
    :onclick "eww open --toggle calendar"
    :onhover "eww update r_bar_date=true"
    :onhoverlost "eww update r_bar_date=false"
    (box :class "wrapper"
(box :space-evenly false
    (label :text time)
    (revealer :reveal r_bar_date
        :transition "slideleft"
        (label :text date :style "padding-left: 10px")))
)))

(defwidget power[] (eventbox :class "power"
    :onhover "eww update r_bar_exit=true"
    :onhoverlost "eww update r_bar_exit=false"
    :onclick cmd_toggle_powermenu
    (box :class "wrapper"
(box :space-evenly false
    (label :text "")
    (revealer :reveal r_bar_exit
        :transition "slideleft"
        (label :text "exit" :style "padding-left: 10px")))
)))
